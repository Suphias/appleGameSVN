using AntDesigner.AppleGame;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Net;
using System.Text;
using WxPayAPI;

namespace WxPayAPI
{
    /**
    * 	配置账号信息
    */
    public class WxPayConfig
    {
   
        //=======【上报信息配置】===================================
        /* 测速上报等级，0.关闭上报; 1.仅错误时上报; 2.全量上报
        */
        public const int REPORT_LEVENL = 0;

        //=======【日志级别】===================================
        /* 日志等级，0.不输出日志；1.只输出错误信息; 2.输出错误和正常信息; 3.输出错误信息、正常信息和调试信息
        */
        public const int LOG_LEVENL = 0;
        //=======【基本信息设置】=====================================
        /* 微信公众号信息配置
        * APPID：绑定支付的APPID（必须配置）
        * MCHID：商户号（必须配置）
        * KEY：商户支付密钥，参考开户邮件设置（必须配置）
        * APPSECRET：公众帐号secert（仅JSAPI支付的时候需要配置）
        */
        //public const string APPID = "wx8329a1e7e3cff76d";
        //public const string MCHID = "1343432001";
        //public const string KEY = "b00647769f6cc02a88743afd63d65ant";
        //public const string APPSECRET = "b00647769f6cc02a88743afd63d65390";

        ////=======【支付结果通知url】===================================== 
        ///* 支付结果通知回调url，用于商户接收支付结果
        //*/

        //public const string NOTIFY_URL = "http://www.88v88v.com/weixinPay/getPayResult/";

        ////=======【商户系统后台机器IP】===================================== 
        ///* 此参数可手动配置也可在程序中自动获取
        //*/
        //public const string IP = "120.25.245.95";
        ////=======【证书路径设置】===================================== 
        ///* 证书路径,注意应该填写绝对路径（仅退款、撤销订单时需要）
        // * 
        //*/
        //public const string SSLCERT_PATH = "weiXinPay/apiclient_cert.p12";
        //public const string SSLCERT_PASSWORD = "1343432001";
        //public const string certName = "重庆京宝科技有限公司";

        public static string APPID;
        public static string MCHID;
        public static string KEY;
        public static string APPSECRET;
        public static string SiteName;
        public static string SSLCERT_PATH;
        public static string SSLCERT_PASSWORD;
        public static string NOTIFY_URL ;
        public static string IP;
        public static string certName;

        private static DateTime access_tokenSaveTime { get; set; }
        private static Access_token access_token_;
        public static Access_token _access_token
        {

            get
            {
                if (access_token_ != null)
                {
                    TimeSpan timSpan = DateTime.Now - access_tokenSaveTime;
                    if (timSpan.Seconds <7000)
                    {
                        return access_token_;
                    }
                }
                string url = "https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=" + APPID + "&secret=" + APPSECRET;
                access_token_ = getWeixinReturnObject<Access_token>(url);
                access_tokenSaveTime = DateTime.Now;
                return access_token_;
            }
        }
        private static DateTime jsapi_ticketSaveTime { get; set; }
        private static Jsapi_ticket jsapi_ticket_;
        public  static Jsapi_ticket _jsapi_ticket
        {

            get
            {
                if (jsapi_ticket_ != null )
                {
                    TimeSpan timSpan = DateTime.Now - jsapi_ticketSaveTime;
                    if (timSpan.Seconds <7000)
                    {
                        return jsapi_ticket_;
                      
                    }
    
                }
                string url = "https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token=" + _access_token.access_token + "&type=jsapi";
                jsapi_ticket_ = getWeixinReturnObject<Jsapi_ticket>(url);
                jsapi_ticketSaveTime = DateTime.Now;
                return jsapi_ticket_;
            }
        }
        private static T getWeixinReturnObject<T>(string url)
        {
            HttpWebRequest httpWebRequest = (HttpWebRequest)(HttpWebRequest.Create(url));
            System.Threading.Tasks.Task<WebResponse> getResponseTask = httpWebRequest.GetResponseAsync();
            getResponseTask.Wait();
            using (HttpWebResponse httpWebResponse = getResponseTask.Result as HttpWebResponse)
            {
                Stream stream = httpWebResponse.GetResponseStream();
                StreamReader streamReader = new StreamReader(stream, Encoding.UTF8);
                string responseString = streamReader.ReadToEnd();
                httpWebRequest.Abort();
                T objectFromJsonstr = JsonConvert.DeserializeObject<T>(responseString);
                return objectFromJsonstr;
            }
        }

        public static string getSignature(string url, 
            out string noncestr, out string timestamp)
        {
            noncestr = WxPayApi.GenerateNonceStr();
            string jsapi_ticket = _jsapi_ticket.ticket;
            timestamp = WxPayApi.GenerateTimeStamp();
            Dictionary<string, string> dictionary = new Dictionary<string, string>();
            dictionary.Add("noncestr", noncestr);
            dictionary.Add("jsapi_ticket", jsapi_ticket);
            dictionary.Add("timestamp", timestamp);
            dictionary.Add("url", url);
            Dictionary<string, string> dictionaryAfterSort = dictionary.OrderBy(p => p.Key)
                                                            .ToDictionary(o => o.Key, p => p.Value);
            StringBuilder stringBuilder = new StringBuilder();
            foreach (var item in dictionaryAfterSort)
            {
                stringBuilder.Append(item.Key);
                stringBuilder.Append("=");
                stringBuilder.Append(item.Value);
                stringBuilder.Append("&");
            }
            stringBuilder.Remove(stringBuilder.Length - 1, 1);
             string  signature = Game.getSHA1(stringBuilder.ToString());
            return signature;
        }
        public class Access_token
        {

            public  string access_token
            {
                get; set;
            }
            public string expires_in
            {
                get; set;
            }
        }

        public class Jsapi_ticket
        {
            public string errcode { get; set; }
            public string errmsg { get; set; }
            public  string ticket { get; set; }
            public string expires_in { get; set; }
        }
    }
       

   

    }




using System;
using System.Collections.Generic;

namespace AntDesigner.NetCore.GameCity
{
    public class Seat: ISeat
    {/// <summary>
    /// 没有人坐
    /// </summary>
        public bool IsEmpty { get;private  set; }
        /// <summary>
        /// 座位上玩家Id
        /// </summary>
        public IPlayerJoinRoom IPlayer { get; private set; }
        /// <summary>
        /// 入座检查
        /// </summary>
        public Func<IInningeGame, bool> DCheckSitDown { get; set; }
        /// <summary>
        /// 一局游戏
        /// </summary>
        public IInningeGame IIningeGame { get;set; }
        /// <summary>
        /// 座位玩家游戏数据
        /// </summary>
        public Dictionary<string, List<string>> GameDateStr { get ; set ; }
        public Dictionary<string, List<object>> GameDateObj{ get; set; }
        public Seat()
        {
            IsEmpty = true;
            GameDateStr = new Dictionary<string, List<string>>();
            GameDateObj = new Dictionary<string, List<object>>();

        }
        /// <summary>
        /// 坐下前事件
        /// </summary>
        public event EventHandler BeforSitDownHandler;
        /// <summary>
        /// 坐下后事件
        /// </summary>
        public event EventHandler AfterSitDownHandler;
        /// <summary>
        /// 离开座位前事件
        /// </summary>
        public event EventHandler BeforPlayerLeaveHandler;
        /// <summary>
        /// 离开座位后事件
        /// </summary>
        public event EventHandler AfterPlayerLeaveHandler;
        /// <summary>
        /// 玩家坐下
        /// </summary>
        /// <param name="player_">玩家</param>
        /// <returns></returns>
        public bool PlayerSitDown(IPlayerJoinRoom player_)
        {
            if (CheckSitDown(IIningeGame))
            {
                BeforSitDownHandler?.Invoke(IIningeGame, new EventArgs());
                MyPlayerSitDown(player_);
                AfterSitDownHandler?.Invoke(IIningeGame, new EventArgs());
                return true;
            }
            return false;
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="player_"></param>
        private  void  MyPlayerSitDown(IPlayerJoinRoom player_)
        {
          
                if (IsEmpty == true || IPlayer==null)
                {
                   IPlayer = player_;
                    IsEmpty = false;
                return;
                }
                throw new Exception("不能坐下");
        }
        private bool CheckSitDown(IInningeGame inningeGame_)
        {
            if (DCheckSitDown!=null)
            {
                return DCheckSitDown(inningeGame_);
            }
            return true;
        }
        /// <summary>
        /// 让座位上的玩家离开
        /// </summary>
        public void PlayLeave()
        {
            BeforPlayerLeaveHandler?.Invoke(IIningeGame, new EventArgs());
            //  PlayerId = 0;
            IPlayer = null;
            IsEmpty = true;
            AfterPlayerLeaveHandler?.Invoke(IIningeGame, new EventArgs());
        }

       
    }
}
using System;
using AntDesigner.NetCore.CardsGame;
using System.Text;
using System.Collections.Generic;
using AntDesigner.NetCore.GameCity;
using AntDesigner.NetCore.CardsGame.Game_SimpleCards;
namespace ConsoleForTest
{
    class Program
    {
        /// <summary>
        /// 玩家,用于测试
        /// </summary>
        class Gplayer : IPlayerJoinRoom
        {
            public string WeixinName { get; set; }
            public int Id { get; set; }

            public decimal Account { get; set; }

            public bool AccountNotEnough(decimal ammount_)
            {
                if (Account < ammount_)
                {
                    return true;
                }
                return false;
            }

            public bool DecutMoney(decimal ticketPrice)
            {
                var account = Account - ticketPrice;
                if (account >= 0)
                {
                    Account = account;
                    return true;
                }
                return false;
            }
        }
        static void Main(string[] args)
        {
            Encoding.RegisterProvider(CodePagesEncodingProvider.Instance);
            var playerMe = new Gplayer()
            {
                Id = 1,
                WeixinName = "hp",
                Account = 10
            
            };
            #region SimpCardsTest
            var playerOpponent = new Gplayer()
        {
            Id = 2,
            WeixinName = "sb",
            Account=35
            };
            SimpleCards simpleCards = new SimpleCards();
            IInningeGame inngineGame = new InningeGame(simpleCards);
            inngineGame.AddSet(2);
            Console.WriteLine("添加2一个座位");
            var mySeat = inngineGame.GetOneEmptySeat();
            mySeat.PlayerSitDown(playerMe);
            Console.WriteLine(playerMe.WeixinName + "坐下了");
            var opponentSeat = inngineGame.GetOneEmptySeat();
            opponentSeat.PlayerSitDown(playerOpponent);
            Console.WriteLine(playerOpponent.WeixinName + "坐下了");
            inngineGame.Start();
            Console.Write("游戏开始了....");
            ABCard myCard = null;
            ABCard opponentCard = null;
            while (true)
            {
               
                myCard = GetPoket(playerMe, simpleCards);
                if (myCard == null)
                {
                    Console.WriteLine("牌发完了!");
                    Console.WriteLine("继续按Y");
                    var next = Console.Read();
                    if (next == 'Y' || next == 'y')
                    {
                        simpleCards.Riffile();
                       myCard=GetPoket(playerMe, simpleCards);
                    }
                    else { break; }

                }
                Console.WriteLine(playerMe.WeixinName + "获得一张牌");
                opponentCard = GetPoket(playerOpponent, simpleCards);
                Console.WriteLine(playerOpponent.WeixinName + "获得一张牌");
                simpleCards.PlayerPlayOutOnePoker(playerMe.Id, myCard);
                Console.WriteLine(playerMe.WeixinName + "出牌:" + myCard.Name + myCard.CardColor);
                Console.WriteLine(playerOpponent.WeixinName + "出牌:" + opponentCard.Name + opponentCard.CardColor);
                var winer = simpleCards.PlayerPlayOutOnePoker(playerOpponent.Id, opponentCard);
                if (winer != null)
                {
                    Console.WriteLine("赢家是:" + winer.IPlayer.WeixinName);
                }

                Console.ReadLine();
            }
            Console.ReadLine();

        }

        private static ABCard GetPoket(Gplayer player_, SimpleCards simpleCards)
        {
            ABCard opponentCard;
            try
            {
                opponentCard = simpleCards.PlayerGetOnePoker(player_);
            }
            catch (Exception e)
            {

                Console.WriteLine(e.Message);
                Console.WriteLine("充值");
                decimal amount = decimal.Parse(Console.ReadLine());
                player_.DecutMoney(-amount);
                opponentCard = simpleCards.PlayerGetOnePoker(player_);
            }

            return opponentCard;
        }
    
#endregion 

    }
}
///////////////////////////////////////////////////////////
//  ManagePlayer.cs
//  Implementation of the Class ManagePlayer
//  Generated by Enterprise Architect
//  Created on:      16-11ÔÂ-2016 19:47:11
//  Original author: ant_d
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Linq;



using AntDesigner.AppleGame;
using AntDesigner.weiXinPay;

namespace AntDesigner.AppleGame
{
    public class ManagePlayer : Player
    {

        
        public static Func<IQueryable<Player>> DgetOnlinePlayer { get; set; }
        public static Func<IQueryable<Player>> DgetAllPlayer { get; set; }
        public static Func<string, Player> DgetPlayerByWeixinName { get; set; }
        public static readonly ManagePlayer instance = new ManagePlayer();
        public static Func<ManagePlayer> DgetManagePlayer { get; set; }
        public  static Func<Notice,Notice> DpublicNotice { get; set; }
        public static  Action<Notice> DremoveNotice { get; set; }
        private static  ManagePlayer OnlyInstance = null;
        private static object lockHelper = new object();
        public static Func<DateTime ,DateTime,IList<RedPack>> DgetRedPackgeList { get; set; }
        public static Func<DateTime, DateTime, IList<PayOrder>> DgetPayOrderList { get; set; }
        public static ManagePlayer getOnlyInstance()
        {
            if (OnlyInstance == null)
            {
                lock (lockHelper)
                {
                    if (OnlyInstance == null)
                    {
                      
                        OnlyInstance = DgetManagePlayer();
                    }
                }
            }
            return OnlyInstance;
        }
        //public Account account
        //{ get;set; }
     public  ManagePlayer()
        {
          
        }
        /// 
        /// <param name="account"></param>
        /// <param name="amount"></param>
        public void adjustAccountBalance(Account account, decimal amount)
        {
            account.addmount(amount,"ÏµÍ³");
            
        }
        /// 
        /// <param name="weixinName"></param>
        public Player findPlayerByWeixinName(string weixinName)
        {

            return DgetPlayerByWeixinName(weixinName);
        }
        /// 
        /// <param name="content"></param>
        public void publishNotice(Notice notice)
        {
            
            DpublicNotice(notice);
        }
        /// 
        /// <param name="player"></param>
        public IList<AccountDetail> seeAccountDetailsOfPlayer(Player player)
        {

            return player.account.accountDetails;
        }
        public IQueryable<Player> seeOnliePlayers()
        {

            return DgetOnlinePlayer();
        }
        public IQueryable<Player> seeAllPlayers()
        {

            return DgetAllPlayer();
        }
        public void setGameDegree(int gameDegree)
        {
            Game.gameDegree = (Game.GameDegree)gameDegree;
        }
        public void  modifyNotice(Notice notice,string content)
        {
            notice.content = content;
            return;
        }
        public void removeNotice(Notice notice)
        {
            DremoveNotice(notice);
            return;
        }

        public IList<RedPack> getRedPackgeList(DateTime fromDate, DateTime toDate)
        {
           return  DgetRedPackgeList(fromDate, toDate);
        }

        internal IList<PayOrder> getPayOrderList(DateTime fromDate, DateTime toDate)
        {
            return DgetPayOrderList(fromDate, toDate);
        }
    }//end ManagePlayer

}//end namespace AntDesigner.AppleGame